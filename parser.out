Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> statements
Rule 2     statements -> comment statements
Rule 3     statements -> comment
Rule 4     statements -> statement
Rule 5     statements -> statement comment
Rule 6     comment -> TEXT_COMMENT
Rule 7     statement -> LBRACE state RBRACE
Rule 8     state -> assign_statement state
Rule 9     state -> if_statement state
Rule 10    state -> while_statement state
Rule 11    state -> assign_statement
Rule 12    state -> if_statement
Rule 13    state -> while_statement
Rule 14    state -> comment state
Rule 15    state -> comment
Rule 16    assign_statement -> ID ASSIGN E SEMICOLON
Rule 17    assign_statement -> ID ASSIGN INPUT LPAR RPAR SEMICOLON
Rule 18    assign_statement -> ID ASSIGN INPUT LPAR TEXT RPAR SEMICOLON
Rule 19    assign_statement -> PRINT LPAR TEXT RPAR SEMICOLON
Rule 20    assign_statement -> PRINT LPAR ID RPAR SEMICOLON
Rule 21    assign_statement -> PRINT LPAR NUMBER RPAR SEMICOLON
Rule 22    assign_statement -> PRINT LPAR NUMBER_FLOAT RPAR SEMICOLON
Rule 23    assign_statement -> PRINT LPAR TEXT COMMA ID RPAR SEMICOLON
Rule 24    assign_statement -> PRINT LPAR E RPAR SEMICOLON
Rule 25    if_statement -> IF LPAR E LESS E RPAR statement
Rule 26    if_statement -> IF LPAR E LESS E RPAR statement ELSE statement
Rule 27    if_statement -> IF LPAR E LARGER E RPAR statement
Rule 28    if_statement -> IF LPAR E LARGER E RPAR statement ELSE statement
Rule 29    if_statement -> IF LPAR E UNEQUAL E RPAR statement
Rule 30    if_statement -> IF LPAR E UNEQUAL E RPAR statement ELSE statement
Rule 31    if_statement -> IF LPAR E EQUAL E RPAR statement
Rule 32    if_statement -> IF LPAR E EQUAL E RPAR statement ELSE statement
Rule 33    while_statement -> WHILE LPAR E LESS E RPAR statement
Rule 34    while_statement -> WHILE LPAR E LESS E RPAR statement ELSE statement
Rule 35    while_statement -> WHILE LPAR E LARGER E RPAR statement
Rule 36    while_statement -> WHILE LPAR E LARGER E RPAR statement ELSE statement
Rule 37    while_statement -> WHILE LPAR E UNEQUAL E RPAR statement
Rule 38    while_statement -> WHILE LPAR E UNEQUAL E RPAR statement ELSE statement
Rule 39    while_statement -> WHILE LPAR E EQUAL E RPAR statement
Rule 40    while_statement -> WHILE LPAR E EQUAL E RPAR statement ELSE statement
Rule 41    E -> expression
Rule 42    E -> LEN LPAR ID RPAR
Rule 43    E -> STR LPAR ID RPAR
Rule 44    E -> CHOP LPAR ID RPAR
Rule 45    E -> ID LBRACKET NUMBER RBRACKET
Rule 46    E -> ID LBRACKET NUMBER COLON NUMBER RBRACKET
Rule 47    E -> ID LBRACKET COLON NUMBER RBRACKET
Rule 48    E -> ID LBRACKET NUMBER COLON RBRACKET
Rule 49    expression -> expression PLUS expression
Rule 50    expression -> expression MINUS expression
Rule 51    expression -> expression TIMES expression
Rule 52    expression -> expression DIVIDE expression
Rule 53    expression -> expression POW expression
Rule 54    expression -> LPAR expression RPAR
Rule 55    expression -> NUMBER
Rule 56    expression -> NUMBER_FLOAT
Rule 57    expression -> ID
Rule 58    expression -> TEXT

Terminals, with rules where they appear

ASSIGN               : 16 17 18
CHOP                 : 44
COLON                : 46 47 48
COMMA                : 23
DIVIDE               : 52
ELSE                 : 26 28 30 32 34 36 38 40
EQUAL                : 31 32 39 40
ID                   : 16 17 18 20 23 42 43 44 45 46 47 48 57
IF                   : 25 26 27 28 29 30 31 32
INPUT                : 17 18
LARGER               : 27 28 35 36
LBRACE               : 7
LBRACKET             : 45 46 47 48
LEN                  : 42
LESS                 : 25 26 33 34
LPAR                 : 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 54
MINUS                : 50
NUMBER               : 21 45 46 46 47 48 55
NUMBER_FLOAT         : 22 56
PLUS                 : 49
POW                  : 53
PRINT                : 19 20 21 22 23 24
RBRACE               : 7
RBRACKET             : 45 46 47 48
RPAR                 : 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 54
SEMICOLON            : 16 17 18 19 20 21 22 23 24
STR                  : 43
TEXT                 : 18 19 23 58
TEXT_COMMENT         : 6
TIMES                : 51
UNEQUAL              : 29 30 37 38
WHILE                : 33 34 35 36 37 38 39 40
error                : 

Nonterminals, with rules where they appear

E                    : 16 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40
assign_statement     : 8 11
comment              : 2 3 5 14 15
expression           : 41 49 49 50 50 51 51 52 52 53 53 54
if_statement         : 9 12
start                : 0
state                : 7 8 9 10 14
statement            : 4 5 25 26 26 27 28 28 29 30 30 31 32 32 33 34 34 35 36 36 37 38 38 39 40 40
statements           : 1 2
while_statement      : 10 13

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . statements
    (2) statements -> . comment statements
    (3) statements -> . comment
    (4) statements -> . statement
    (5) statements -> . statement comment
    (6) comment -> . TEXT_COMMENT
    (7) statement -> . LBRACE state RBRACE

    TEXT_COMMENT    shift and go to state 5
    LBRACE          shift and go to state 6

    start                          shift and go to state 1
    statements                     shift and go to state 2
    comment                        shift and go to state 3
    statement                      shift and go to state 4

state 1

    (0) S' -> start .



state 2

    (1) start -> statements .

    $end            reduce using rule 1 (start -> statements .)


state 3

    (2) statements -> comment . statements
    (3) statements -> comment .
    (2) statements -> . comment statements
    (3) statements -> . comment
    (4) statements -> . statement
    (5) statements -> . statement comment
    (6) comment -> . TEXT_COMMENT
    (7) statement -> . LBRACE state RBRACE

    $end            reduce using rule 3 (statements -> comment .)
    TEXT_COMMENT    shift and go to state 5
    LBRACE          shift and go to state 6

    comment                        shift and go to state 3
    statements                     shift and go to state 7
    statement                      shift and go to state 4

state 4

    (4) statements -> statement .
    (5) statements -> statement . comment
    (6) comment -> . TEXT_COMMENT

    $end            reduce using rule 4 (statements -> statement .)
    TEXT_COMMENT    shift and go to state 5

    comment                        shift and go to state 8

state 5

    (6) comment -> TEXT_COMMENT .

    TEXT_COMMENT    reduce using rule 6 (comment -> TEXT_COMMENT .)
    LBRACE          reduce using rule 6 (comment -> TEXT_COMMENT .)
    $end            reduce using rule 6 (comment -> TEXT_COMMENT .)
    ID              reduce using rule 6 (comment -> TEXT_COMMENT .)
    PRINT           reduce using rule 6 (comment -> TEXT_COMMENT .)
    IF              reduce using rule 6 (comment -> TEXT_COMMENT .)
    WHILE           reduce using rule 6 (comment -> TEXT_COMMENT .)
    RBRACE          reduce using rule 6 (comment -> TEXT_COMMENT .)


state 6

    (7) statement -> LBRACE . state RBRACE
    (8) state -> . assign_statement state
    (9) state -> . if_statement state
    (10) state -> . while_statement state
    (11) state -> . assign_statement
    (12) state -> . if_statement
    (13) state -> . while_statement
    (14) state -> . comment state
    (15) state -> . comment
    (16) assign_statement -> . ID ASSIGN E SEMICOLON
    (17) assign_statement -> . ID ASSIGN INPUT LPAR RPAR SEMICOLON
    (18) assign_statement -> . ID ASSIGN INPUT LPAR TEXT RPAR SEMICOLON
    (19) assign_statement -> . PRINT LPAR TEXT RPAR SEMICOLON
    (20) assign_statement -> . PRINT LPAR ID RPAR SEMICOLON
    (21) assign_statement -> . PRINT LPAR NUMBER RPAR SEMICOLON
    (22) assign_statement -> . PRINT LPAR NUMBER_FLOAT RPAR SEMICOLON
    (23) assign_statement -> . PRINT LPAR TEXT COMMA ID RPAR SEMICOLON
    (24) assign_statement -> . PRINT LPAR E RPAR SEMICOLON
    (25) if_statement -> . IF LPAR E LESS E RPAR statement
    (26) if_statement -> . IF LPAR E LESS E RPAR statement ELSE statement
    (27) if_statement -> . IF LPAR E LARGER E RPAR statement
    (28) if_statement -> . IF LPAR E LARGER E RPAR statement ELSE statement
    (29) if_statement -> . IF LPAR E UNEQUAL E RPAR statement
    (30) if_statement -> . IF LPAR E UNEQUAL E RPAR statement ELSE statement
    (31) if_statement -> . IF LPAR E EQUAL E RPAR statement
    (32) if_statement -> . IF LPAR E EQUAL E RPAR statement ELSE statement
    (33) while_statement -> . WHILE LPAR E LESS E RPAR statement
    (34) while_statement -> . WHILE LPAR E LESS E RPAR statement ELSE statement
    (35) while_statement -> . WHILE LPAR E LARGER E RPAR statement
    (36) while_statement -> . WHILE LPAR E LARGER E RPAR statement ELSE statement
    (37) while_statement -> . WHILE LPAR E UNEQUAL E RPAR statement
    (38) while_statement -> . WHILE LPAR E UNEQUAL E RPAR statement ELSE statement
    (39) while_statement -> . WHILE LPAR E EQUAL E RPAR statement
    (40) while_statement -> . WHILE LPAR E EQUAL E RPAR statement ELSE statement
    (6) comment -> . TEXT_COMMENT

    ID              shift and go to state 14
    PRINT           shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    TEXT_COMMENT    shift and go to state 5

    state                          shift and go to state 9
    assign_statement               shift and go to state 10
    if_statement                   shift and go to state 11
    while_statement                shift and go to state 12
    comment                        shift and go to state 13

state 7

    (2) statements -> comment statements .

    $end            reduce using rule 2 (statements -> comment statements .)


state 8

    (5) statements -> statement comment .

    $end            reduce using rule 5 (statements -> statement comment .)


state 9

    (7) statement -> LBRACE state . RBRACE

    RBRACE          shift and go to state 18


state 10

    (8) state -> assign_statement . state
    (11) state -> assign_statement .
    (8) state -> . assign_statement state
    (9) state -> . if_statement state
    (10) state -> . while_statement state
    (11) state -> . assign_statement
    (12) state -> . if_statement
    (13) state -> . while_statement
    (14) state -> . comment state
    (15) state -> . comment
    (16) assign_statement -> . ID ASSIGN E SEMICOLON
    (17) assign_statement -> . ID ASSIGN INPUT LPAR RPAR SEMICOLON
    (18) assign_statement -> . ID ASSIGN INPUT LPAR TEXT RPAR SEMICOLON
    (19) assign_statement -> . PRINT LPAR TEXT RPAR SEMICOLON
    (20) assign_statement -> . PRINT LPAR ID RPAR SEMICOLON
    (21) assign_statement -> . PRINT LPAR NUMBER RPAR SEMICOLON
    (22) assign_statement -> . PRINT LPAR NUMBER_FLOAT RPAR SEMICOLON
    (23) assign_statement -> . PRINT LPAR TEXT COMMA ID RPAR SEMICOLON
    (24) assign_statement -> . PRINT LPAR E RPAR SEMICOLON
    (25) if_statement -> . IF LPAR E LESS E RPAR statement
    (26) if_statement -> . IF LPAR E LESS E RPAR statement ELSE statement
    (27) if_statement -> . IF LPAR E LARGER E RPAR statement
    (28) if_statement -> . IF LPAR E LARGER E RPAR statement ELSE statement
    (29) if_statement -> . IF LPAR E UNEQUAL E RPAR statement
    (30) if_statement -> . IF LPAR E UNEQUAL E RPAR statement ELSE statement
    (31) if_statement -> . IF LPAR E EQUAL E RPAR statement
    (32) if_statement -> . IF LPAR E EQUAL E RPAR statement ELSE statement
    (33) while_statement -> . WHILE LPAR E LESS E RPAR statement
    (34) while_statement -> . WHILE LPAR E LESS E RPAR statement ELSE statement
    (35) while_statement -> . WHILE LPAR E LARGER E RPAR statement
    (36) while_statement -> . WHILE LPAR E LARGER E RPAR statement ELSE statement
    (37) while_statement -> . WHILE LPAR E UNEQUAL E RPAR statement
    (38) while_statement -> . WHILE LPAR E UNEQUAL E RPAR statement ELSE statement
    (39) while_statement -> . WHILE LPAR E EQUAL E RPAR statement
    (40) while_statement -> . WHILE LPAR E EQUAL E RPAR statement ELSE statement
    (6) comment -> . TEXT_COMMENT

    RBRACE          reduce using rule 11 (state -> assign_statement .)
    ID              shift and go to state 14
    PRINT           shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    TEXT_COMMENT    shift and go to state 5

    assign_statement               shift and go to state 10
    state                          shift and go to state 19
    if_statement                   shift and go to state 11
    while_statement                shift and go to state 12
    comment                        shift and go to state 13

state 11

    (9) state -> if_statement . state
    (12) state -> if_statement .
    (8) state -> . assign_statement state
    (9) state -> . if_statement state
    (10) state -> . while_statement state
    (11) state -> . assign_statement
    (12) state -> . if_statement
    (13) state -> . while_statement
    (14) state -> . comment state
    (15) state -> . comment
    (16) assign_statement -> . ID ASSIGN E SEMICOLON
    (17) assign_statement -> . ID ASSIGN INPUT LPAR RPAR SEMICOLON
    (18) assign_statement -> . ID ASSIGN INPUT LPAR TEXT RPAR SEMICOLON
    (19) assign_statement -> . PRINT LPAR TEXT RPAR SEMICOLON
    (20) assign_statement -> . PRINT LPAR ID RPAR SEMICOLON
    (21) assign_statement -> . PRINT LPAR NUMBER RPAR SEMICOLON
    (22) assign_statement -> . PRINT LPAR NUMBER_FLOAT RPAR SEMICOLON
    (23) assign_statement -> . PRINT LPAR TEXT COMMA ID RPAR SEMICOLON
    (24) assign_statement -> . PRINT LPAR E RPAR SEMICOLON
    (25) if_statement -> . IF LPAR E LESS E RPAR statement
    (26) if_statement -> . IF LPAR E LESS E RPAR statement ELSE statement
    (27) if_statement -> . IF LPAR E LARGER E RPAR statement
    (28) if_statement -> . IF LPAR E LARGER E RPAR statement ELSE statement
    (29) if_statement -> . IF LPAR E UNEQUAL E RPAR statement
    (30) if_statement -> . IF LPAR E UNEQUAL E RPAR statement ELSE statement
    (31) if_statement -> . IF LPAR E EQUAL E RPAR statement
    (32) if_statement -> . IF LPAR E EQUAL E RPAR statement ELSE statement
    (33) while_statement -> . WHILE LPAR E LESS E RPAR statement
    (34) while_statement -> . WHILE LPAR E LESS E RPAR statement ELSE statement
    (35) while_statement -> . WHILE LPAR E LARGER E RPAR statement
    (36) while_statement -> . WHILE LPAR E LARGER E RPAR statement ELSE statement
    (37) while_statement -> . WHILE LPAR E UNEQUAL E RPAR statement
    (38) while_statement -> . WHILE LPAR E UNEQUAL E RPAR statement ELSE statement
    (39) while_statement -> . WHILE LPAR E EQUAL E RPAR statement
    (40) while_statement -> . WHILE LPAR E EQUAL E RPAR statement ELSE statement
    (6) comment -> . TEXT_COMMENT

    RBRACE          reduce using rule 12 (state -> if_statement .)
    ID              shift and go to state 14
    PRINT           shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    TEXT_COMMENT    shift and go to state 5

    if_statement                   shift and go to state 11
    state                          shift and go to state 20
    assign_statement               shift and go to state 10
    while_statement                shift and go to state 12
    comment                        shift and go to state 13

state 12

    (10) state -> while_statement . state
    (13) state -> while_statement .
    (8) state -> . assign_statement state
    (9) state -> . if_statement state
    (10) state -> . while_statement state
    (11) state -> . assign_statement
    (12) state -> . if_statement
    (13) state -> . while_statement
    (14) state -> . comment state
    (15) state -> . comment
    (16) assign_statement -> . ID ASSIGN E SEMICOLON
    (17) assign_statement -> . ID ASSIGN INPUT LPAR RPAR SEMICOLON
    (18) assign_statement -> . ID ASSIGN INPUT LPAR TEXT RPAR SEMICOLON
    (19) assign_statement -> . PRINT LPAR TEXT RPAR SEMICOLON
    (20) assign_statement -> . PRINT LPAR ID RPAR SEMICOLON
    (21) assign_statement -> . PRINT LPAR NUMBER RPAR SEMICOLON
    (22) assign_statement -> . PRINT LPAR NUMBER_FLOAT RPAR SEMICOLON
    (23) assign_statement -> . PRINT LPAR TEXT COMMA ID RPAR SEMICOLON
    (24) assign_statement -> . PRINT LPAR E RPAR SEMICOLON
    (25) if_statement -> . IF LPAR E LESS E RPAR statement
    (26) if_statement -> . IF LPAR E LESS E RPAR statement ELSE statement
    (27) if_statement -> . IF LPAR E LARGER E RPAR statement
    (28) if_statement -> . IF LPAR E LARGER E RPAR statement ELSE statement
    (29) if_statement -> . IF LPAR E UNEQUAL E RPAR statement
    (30) if_statement -> . IF LPAR E UNEQUAL E RPAR statement ELSE statement
    (31) if_statement -> . IF LPAR E EQUAL E RPAR statement
    (32) if_statement -> . IF LPAR E EQUAL E RPAR statement ELSE statement
    (33) while_statement -> . WHILE LPAR E LESS E RPAR statement
    (34) while_statement -> . WHILE LPAR E LESS E RPAR statement ELSE statement
    (35) while_statement -> . WHILE LPAR E LARGER E RPAR statement
    (36) while_statement -> . WHILE LPAR E LARGER E RPAR statement ELSE statement
    (37) while_statement -> . WHILE LPAR E UNEQUAL E RPAR statement
    (38) while_statement -> . WHILE LPAR E UNEQUAL E RPAR statement ELSE statement
    (39) while_statement -> . WHILE LPAR E EQUAL E RPAR statement
    (40) while_statement -> . WHILE LPAR E EQUAL E RPAR statement ELSE statement
    (6) comment -> . TEXT_COMMENT

    RBRACE          reduce using rule 13 (state -> while_statement .)
    ID              shift and go to state 14
    PRINT           shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    TEXT_COMMENT    shift and go to state 5

    while_statement                shift and go to state 12
    state                          shift and go to state 21
    assign_statement               shift and go to state 10
    if_statement                   shift and go to state 11
    comment                        shift and go to state 13

state 13

    (14) state -> comment . state
    (15) state -> comment .
    (8) state -> . assign_statement state
    (9) state -> . if_statement state
    (10) state -> . while_statement state
    (11) state -> . assign_statement
    (12) state -> . if_statement
    (13) state -> . while_statement
    (14) state -> . comment state
    (15) state -> . comment
    (16) assign_statement -> . ID ASSIGN E SEMICOLON
    (17) assign_statement -> . ID ASSIGN INPUT LPAR RPAR SEMICOLON
    (18) assign_statement -> . ID ASSIGN INPUT LPAR TEXT RPAR SEMICOLON
    (19) assign_statement -> . PRINT LPAR TEXT RPAR SEMICOLON
    (20) assign_statement -> . PRINT LPAR ID RPAR SEMICOLON
    (21) assign_statement -> . PRINT LPAR NUMBER RPAR SEMICOLON
    (22) assign_statement -> . PRINT LPAR NUMBER_FLOAT RPAR SEMICOLON
    (23) assign_statement -> . PRINT LPAR TEXT COMMA ID RPAR SEMICOLON
    (24) assign_statement -> . PRINT LPAR E RPAR SEMICOLON
    (25) if_statement -> . IF LPAR E LESS E RPAR statement
    (26) if_statement -> . IF LPAR E LESS E RPAR statement ELSE statement
    (27) if_statement -> . IF LPAR E LARGER E RPAR statement
    (28) if_statement -> . IF LPAR E LARGER E RPAR statement ELSE statement
    (29) if_statement -> . IF LPAR E UNEQUAL E RPAR statement
    (30) if_statement -> . IF LPAR E UNEQUAL E RPAR statement ELSE statement
    (31) if_statement -> . IF LPAR E EQUAL E RPAR statement
    (32) if_statement -> . IF LPAR E EQUAL E RPAR statement ELSE statement
    (33) while_statement -> . WHILE LPAR E LESS E RPAR statement
    (34) while_statement -> . WHILE LPAR E LESS E RPAR statement ELSE statement
    (35) while_statement -> . WHILE LPAR E LARGER E RPAR statement
    (36) while_statement -> . WHILE LPAR E LARGER E RPAR statement ELSE statement
    (37) while_statement -> . WHILE LPAR E UNEQUAL E RPAR statement
    (38) while_statement -> . WHILE LPAR E UNEQUAL E RPAR statement ELSE statement
    (39) while_statement -> . WHILE LPAR E EQUAL E RPAR statement
    (40) while_statement -> . WHILE LPAR E EQUAL E RPAR statement ELSE statement
    (6) comment -> . TEXT_COMMENT

    RBRACE          reduce using rule 15 (state -> comment .)
    ID              shift and go to state 14
    PRINT           shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    TEXT_COMMENT    shift and go to state 5

    comment                        shift and go to state 13
    state                          shift and go to state 22
    assign_statement               shift and go to state 10
    if_statement                   shift and go to state 11
    while_statement                shift and go to state 12

state 14

    (16) assign_statement -> ID . ASSIGN E SEMICOLON
    (17) assign_statement -> ID . ASSIGN INPUT LPAR RPAR SEMICOLON
    (18) assign_statement -> ID . ASSIGN INPUT LPAR TEXT RPAR SEMICOLON

    ASSIGN          shift and go to state 23


state 15

    (19) assign_statement -> PRINT . LPAR TEXT RPAR SEMICOLON
    (20) assign_statement -> PRINT . LPAR ID RPAR SEMICOLON
    (21) assign_statement -> PRINT . LPAR NUMBER RPAR SEMICOLON
    (22) assign_statement -> PRINT . LPAR NUMBER_FLOAT RPAR SEMICOLON
    (23) assign_statement -> PRINT . LPAR TEXT COMMA ID RPAR SEMICOLON
    (24) assign_statement -> PRINT . LPAR E RPAR SEMICOLON

    LPAR            shift and go to state 24


state 16

    (25) if_statement -> IF . LPAR E LESS E RPAR statement
    (26) if_statement -> IF . LPAR E LESS E RPAR statement ELSE statement
    (27) if_statement -> IF . LPAR E LARGER E RPAR statement
    (28) if_statement -> IF . LPAR E LARGER E RPAR statement ELSE statement
    (29) if_statement -> IF . LPAR E UNEQUAL E RPAR statement
    (30) if_statement -> IF . LPAR E UNEQUAL E RPAR statement ELSE statement
    (31) if_statement -> IF . LPAR E EQUAL E RPAR statement
    (32) if_statement -> IF . LPAR E EQUAL E RPAR statement ELSE statement

    LPAR            shift and go to state 25


state 17

    (33) while_statement -> WHILE . LPAR E LESS E RPAR statement
    (34) while_statement -> WHILE . LPAR E LESS E RPAR statement ELSE statement
    (35) while_statement -> WHILE . LPAR E LARGER E RPAR statement
    (36) while_statement -> WHILE . LPAR E LARGER E RPAR statement ELSE statement
    (37) while_statement -> WHILE . LPAR E UNEQUAL E RPAR statement
    (38) while_statement -> WHILE . LPAR E UNEQUAL E RPAR statement ELSE statement
    (39) while_statement -> WHILE . LPAR E EQUAL E RPAR statement
    (40) while_statement -> WHILE . LPAR E EQUAL E RPAR statement ELSE statement

    LPAR            shift and go to state 26


state 18

    (7) statement -> LBRACE state RBRACE .

    TEXT_COMMENT    reduce using rule 7 (statement -> LBRACE state RBRACE .)
    $end            reduce using rule 7 (statement -> LBRACE state RBRACE .)
    ELSE            reduce using rule 7 (statement -> LBRACE state RBRACE .)
    ID              reduce using rule 7 (statement -> LBRACE state RBRACE .)
    PRINT           reduce using rule 7 (statement -> LBRACE state RBRACE .)
    IF              reduce using rule 7 (statement -> LBRACE state RBRACE .)
    WHILE           reduce using rule 7 (statement -> LBRACE state RBRACE .)
    RBRACE          reduce using rule 7 (statement -> LBRACE state RBRACE .)


state 19

    (8) state -> assign_statement state .

    RBRACE          reduce using rule 8 (state -> assign_statement state .)


state 20

    (9) state -> if_statement state .

    RBRACE          reduce using rule 9 (state -> if_statement state .)


state 21

    (10) state -> while_statement state .

    RBRACE          reduce using rule 10 (state -> while_statement state .)


state 22

    (14) state -> comment state .

    RBRACE          reduce using rule 14 (state -> comment state .)


state 23

    (16) assign_statement -> ID ASSIGN . E SEMICOLON
    (17) assign_statement -> ID ASSIGN . INPUT LPAR RPAR SEMICOLON
    (18) assign_statement -> ID ASSIGN . INPUT LPAR TEXT RPAR SEMICOLON
    (41) E -> . expression
    (42) E -> . LEN LPAR ID RPAR
    (43) E -> . STR LPAR ID RPAR
    (44) E -> . CHOP LPAR ID RPAR
    (45) E -> . ID LBRACKET NUMBER RBRACKET
    (46) E -> . ID LBRACKET NUMBER COLON NUMBER RBRACKET
    (47) E -> . ID LBRACKET COLON NUMBER RBRACKET
    (48) E -> . ID LBRACKET NUMBER COLON RBRACKET
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression POW expression
    (54) expression -> . LPAR expression RPAR
    (55) expression -> . NUMBER
    (56) expression -> . NUMBER_FLOAT
    (57) expression -> . ID
    (58) expression -> . TEXT

    INPUT           shift and go to state 29
    LEN             shift and go to state 33
    STR             shift and go to state 34
    CHOP            shift and go to state 35
    ID              shift and go to state 27
    LPAR            shift and go to state 30
    NUMBER          shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TEXT            shift and go to state 31

    E                              shift and go to state 28
    expression                     shift and go to state 32

state 24

    (19) assign_statement -> PRINT LPAR . TEXT RPAR SEMICOLON
    (20) assign_statement -> PRINT LPAR . ID RPAR SEMICOLON
    (21) assign_statement -> PRINT LPAR . NUMBER RPAR SEMICOLON
    (22) assign_statement -> PRINT LPAR . NUMBER_FLOAT RPAR SEMICOLON
    (23) assign_statement -> PRINT LPAR . TEXT COMMA ID RPAR SEMICOLON
    (24) assign_statement -> PRINT LPAR . E RPAR SEMICOLON
    (41) E -> . expression
    (42) E -> . LEN LPAR ID RPAR
    (43) E -> . STR LPAR ID RPAR
    (44) E -> . CHOP LPAR ID RPAR
    (45) E -> . ID LBRACKET NUMBER RBRACKET
    (46) E -> . ID LBRACKET NUMBER COLON NUMBER RBRACKET
    (47) E -> . ID LBRACKET COLON NUMBER RBRACKET
    (48) E -> . ID LBRACKET NUMBER COLON RBRACKET
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression POW expression
    (54) expression -> . LPAR expression RPAR
    (55) expression -> . NUMBER
    (56) expression -> . NUMBER_FLOAT
    (57) expression -> . ID
    (58) expression -> . TEXT

    TEXT            shift and go to state 38
    ID              shift and go to state 39
    NUMBER          shift and go to state 40
    NUMBER_FLOAT    shift and go to state 41
    LEN             shift and go to state 33
    STR             shift and go to state 34
    CHOP            shift and go to state 35
    LPAR            shift and go to state 30

    E                              shift and go to state 42
    expression                     shift and go to state 32

state 25

    (25) if_statement -> IF LPAR . E LESS E RPAR statement
    (26) if_statement -> IF LPAR . E LESS E RPAR statement ELSE statement
    (27) if_statement -> IF LPAR . E LARGER E RPAR statement
    (28) if_statement -> IF LPAR . E LARGER E RPAR statement ELSE statement
    (29) if_statement -> IF LPAR . E UNEQUAL E RPAR statement
    (30) if_statement -> IF LPAR . E UNEQUAL E RPAR statement ELSE statement
    (31) if_statement -> IF LPAR . E EQUAL E RPAR statement
    (32) if_statement -> IF LPAR . E EQUAL E RPAR statement ELSE statement
    (41) E -> . expression
    (42) E -> . LEN LPAR ID RPAR
    (43) E -> . STR LPAR ID RPAR
    (44) E -> . CHOP LPAR ID RPAR
    (45) E -> . ID LBRACKET NUMBER RBRACKET
    (46) E -> . ID LBRACKET NUMBER COLON NUMBER RBRACKET
    (47) E -> . ID LBRACKET COLON NUMBER RBRACKET
    (48) E -> . ID LBRACKET NUMBER COLON RBRACKET
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression POW expression
    (54) expression -> . LPAR expression RPAR
    (55) expression -> . NUMBER
    (56) expression -> . NUMBER_FLOAT
    (57) expression -> . ID
    (58) expression -> . TEXT

    LEN             shift and go to state 33
    STR             shift and go to state 34
    CHOP            shift and go to state 35
    ID              shift and go to state 27
    LPAR            shift and go to state 30
    NUMBER          shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TEXT            shift and go to state 31

    E                              shift and go to state 43
    expression                     shift and go to state 32

state 26

    (33) while_statement -> WHILE LPAR . E LESS E RPAR statement
    (34) while_statement -> WHILE LPAR . E LESS E RPAR statement ELSE statement
    (35) while_statement -> WHILE LPAR . E LARGER E RPAR statement
    (36) while_statement -> WHILE LPAR . E LARGER E RPAR statement ELSE statement
    (37) while_statement -> WHILE LPAR . E UNEQUAL E RPAR statement
    (38) while_statement -> WHILE LPAR . E UNEQUAL E RPAR statement ELSE statement
    (39) while_statement -> WHILE LPAR . E EQUAL E RPAR statement
    (40) while_statement -> WHILE LPAR . E EQUAL E RPAR statement ELSE statement
    (41) E -> . expression
    (42) E -> . LEN LPAR ID RPAR
    (43) E -> . STR LPAR ID RPAR
    (44) E -> . CHOP LPAR ID RPAR
    (45) E -> . ID LBRACKET NUMBER RBRACKET
    (46) E -> . ID LBRACKET NUMBER COLON NUMBER RBRACKET
    (47) E -> . ID LBRACKET COLON NUMBER RBRACKET
    (48) E -> . ID LBRACKET NUMBER COLON RBRACKET
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression POW expression
    (54) expression -> . LPAR expression RPAR
    (55) expression -> . NUMBER
    (56) expression -> . NUMBER_FLOAT
    (57) expression -> . ID
    (58) expression -> . TEXT

    LEN             shift and go to state 33
    STR             shift and go to state 34
    CHOP            shift and go to state 35
    ID              shift and go to state 27
    LPAR            shift and go to state 30
    NUMBER          shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TEXT            shift and go to state 31

    E                              shift and go to state 44
    expression                     shift and go to state 32

state 27

    (45) E -> ID . LBRACKET NUMBER RBRACKET
    (46) E -> ID . LBRACKET NUMBER COLON NUMBER RBRACKET
    (47) E -> ID . LBRACKET COLON NUMBER RBRACKET
    (48) E -> ID . LBRACKET NUMBER COLON RBRACKET
    (57) expression -> ID .

    LBRACKET        shift and go to state 45
    PLUS            reduce using rule 57 (expression -> ID .)
    MINUS           reduce using rule 57 (expression -> ID .)
    TIMES           reduce using rule 57 (expression -> ID .)
    DIVIDE          reduce using rule 57 (expression -> ID .)
    POW             reduce using rule 57 (expression -> ID .)
    SEMICOLON       reduce using rule 57 (expression -> ID .)
    LESS            reduce using rule 57 (expression -> ID .)
    LARGER          reduce using rule 57 (expression -> ID .)
    UNEQUAL         reduce using rule 57 (expression -> ID .)
    EQUAL           reduce using rule 57 (expression -> ID .)
    RPAR            reduce using rule 57 (expression -> ID .)


state 28

    (16) assign_statement -> ID ASSIGN E . SEMICOLON

    SEMICOLON       shift and go to state 46


state 29

    (17) assign_statement -> ID ASSIGN INPUT . LPAR RPAR SEMICOLON
    (18) assign_statement -> ID ASSIGN INPUT . LPAR TEXT RPAR SEMICOLON

    LPAR            shift and go to state 47


state 30

    (54) expression -> LPAR . expression RPAR
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression POW expression
    (54) expression -> . LPAR expression RPAR
    (55) expression -> . NUMBER
    (56) expression -> . NUMBER_FLOAT
    (57) expression -> . ID
    (58) expression -> . TEXT

    LPAR            shift and go to state 30
    NUMBER          shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    ID              shift and go to state 49
    TEXT            shift and go to state 31

    expression                     shift and go to state 48

state 31

    (58) expression -> TEXT .

    PLUS            reduce using rule 58 (expression -> TEXT .)
    MINUS           reduce using rule 58 (expression -> TEXT .)
    TIMES           reduce using rule 58 (expression -> TEXT .)
    DIVIDE          reduce using rule 58 (expression -> TEXT .)
    POW             reduce using rule 58 (expression -> TEXT .)
    SEMICOLON       reduce using rule 58 (expression -> TEXT .)
    LESS            reduce using rule 58 (expression -> TEXT .)
    LARGER          reduce using rule 58 (expression -> TEXT .)
    UNEQUAL         reduce using rule 58 (expression -> TEXT .)
    EQUAL           reduce using rule 58 (expression -> TEXT .)
    RPAR            reduce using rule 58 (expression -> TEXT .)


state 32

    (41) E -> expression .
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . POW expression

    SEMICOLON       reduce using rule 41 (E -> expression .)
    RPAR            reduce using rule 41 (E -> expression .)
    LESS            reduce using rule 41 (E -> expression .)
    LARGER          reduce using rule 41 (E -> expression .)
    UNEQUAL         reduce using rule 41 (E -> expression .)
    EQUAL           reduce using rule 41 (E -> expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    POW             shift and go to state 54


state 33

    (42) E -> LEN . LPAR ID RPAR

    LPAR            shift and go to state 55


state 34

    (43) E -> STR . LPAR ID RPAR

    LPAR            shift and go to state 56


state 35

    (44) E -> CHOP . LPAR ID RPAR

    LPAR            shift and go to state 57


state 36

    (55) expression -> NUMBER .

    PLUS            reduce using rule 55 (expression -> NUMBER .)
    MINUS           reduce using rule 55 (expression -> NUMBER .)
    TIMES           reduce using rule 55 (expression -> NUMBER .)
    DIVIDE          reduce using rule 55 (expression -> NUMBER .)
    POW             reduce using rule 55 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 55 (expression -> NUMBER .)
    LESS            reduce using rule 55 (expression -> NUMBER .)
    LARGER          reduce using rule 55 (expression -> NUMBER .)
    UNEQUAL         reduce using rule 55 (expression -> NUMBER .)
    EQUAL           reduce using rule 55 (expression -> NUMBER .)
    RPAR            reduce using rule 55 (expression -> NUMBER .)


state 37

    (56) expression -> NUMBER_FLOAT .

    PLUS            reduce using rule 56 (expression -> NUMBER_FLOAT .)
    MINUS           reduce using rule 56 (expression -> NUMBER_FLOAT .)
    TIMES           reduce using rule 56 (expression -> NUMBER_FLOAT .)
    DIVIDE          reduce using rule 56 (expression -> NUMBER_FLOAT .)
    POW             reduce using rule 56 (expression -> NUMBER_FLOAT .)
    SEMICOLON       reduce using rule 56 (expression -> NUMBER_FLOAT .)
    LESS            reduce using rule 56 (expression -> NUMBER_FLOAT .)
    LARGER          reduce using rule 56 (expression -> NUMBER_FLOAT .)
    UNEQUAL         reduce using rule 56 (expression -> NUMBER_FLOAT .)
    EQUAL           reduce using rule 56 (expression -> NUMBER_FLOAT .)
    RPAR            reduce using rule 56 (expression -> NUMBER_FLOAT .)


state 38

    (19) assign_statement -> PRINT LPAR TEXT . RPAR SEMICOLON
    (23) assign_statement -> PRINT LPAR TEXT . COMMA ID RPAR SEMICOLON
    (58) expression -> TEXT .

  ! shift/reduce conflict for RPAR resolved as shift
    RPAR            shift and go to state 58
    COMMA           shift and go to state 59
    PLUS            reduce using rule 58 (expression -> TEXT .)
    MINUS           reduce using rule 58 (expression -> TEXT .)
    TIMES           reduce using rule 58 (expression -> TEXT .)
    DIVIDE          reduce using rule 58 (expression -> TEXT .)
    POW             reduce using rule 58 (expression -> TEXT .)

  ! RPAR            [ reduce using rule 58 (expression -> TEXT .) ]


state 39

    (20) assign_statement -> PRINT LPAR ID . RPAR SEMICOLON
    (45) E -> ID . LBRACKET NUMBER RBRACKET
    (46) E -> ID . LBRACKET NUMBER COLON NUMBER RBRACKET
    (47) E -> ID . LBRACKET COLON NUMBER RBRACKET
    (48) E -> ID . LBRACKET NUMBER COLON RBRACKET
    (57) expression -> ID .

  ! shift/reduce conflict for RPAR resolved as shift
    RPAR            shift and go to state 60
    LBRACKET        shift and go to state 45
    PLUS            reduce using rule 57 (expression -> ID .)
    MINUS           reduce using rule 57 (expression -> ID .)
    TIMES           reduce using rule 57 (expression -> ID .)
    DIVIDE          reduce using rule 57 (expression -> ID .)
    POW             reduce using rule 57 (expression -> ID .)

  ! RPAR            [ reduce using rule 57 (expression -> ID .) ]


state 40

    (21) assign_statement -> PRINT LPAR NUMBER . RPAR SEMICOLON
    (55) expression -> NUMBER .

  ! shift/reduce conflict for RPAR resolved as shift
    RPAR            shift and go to state 61
    PLUS            reduce using rule 55 (expression -> NUMBER .)
    MINUS           reduce using rule 55 (expression -> NUMBER .)
    TIMES           reduce using rule 55 (expression -> NUMBER .)
    DIVIDE          reduce using rule 55 (expression -> NUMBER .)
    POW             reduce using rule 55 (expression -> NUMBER .)

  ! RPAR            [ reduce using rule 55 (expression -> NUMBER .) ]


state 41

    (22) assign_statement -> PRINT LPAR NUMBER_FLOAT . RPAR SEMICOLON
    (56) expression -> NUMBER_FLOAT .

  ! shift/reduce conflict for RPAR resolved as shift
    RPAR            shift and go to state 62
    PLUS            reduce using rule 56 (expression -> NUMBER_FLOAT .)
    MINUS           reduce using rule 56 (expression -> NUMBER_FLOAT .)
    TIMES           reduce using rule 56 (expression -> NUMBER_FLOAT .)
    DIVIDE          reduce using rule 56 (expression -> NUMBER_FLOAT .)
    POW             reduce using rule 56 (expression -> NUMBER_FLOAT .)

  ! RPAR            [ reduce using rule 56 (expression -> NUMBER_FLOAT .) ]


state 42

    (24) assign_statement -> PRINT LPAR E . RPAR SEMICOLON

    RPAR            shift and go to state 63


state 43

    (25) if_statement -> IF LPAR E . LESS E RPAR statement
    (26) if_statement -> IF LPAR E . LESS E RPAR statement ELSE statement
    (27) if_statement -> IF LPAR E . LARGER E RPAR statement
    (28) if_statement -> IF LPAR E . LARGER E RPAR statement ELSE statement
    (29) if_statement -> IF LPAR E . UNEQUAL E RPAR statement
    (30) if_statement -> IF LPAR E . UNEQUAL E RPAR statement ELSE statement
    (31) if_statement -> IF LPAR E . EQUAL E RPAR statement
    (32) if_statement -> IF LPAR E . EQUAL E RPAR statement ELSE statement

    LESS            shift and go to state 64
    LARGER          shift and go to state 65
    UNEQUAL         shift and go to state 66
    EQUAL           shift and go to state 67


state 44

    (33) while_statement -> WHILE LPAR E . LESS E RPAR statement
    (34) while_statement -> WHILE LPAR E . LESS E RPAR statement ELSE statement
    (35) while_statement -> WHILE LPAR E . LARGER E RPAR statement
    (36) while_statement -> WHILE LPAR E . LARGER E RPAR statement ELSE statement
    (37) while_statement -> WHILE LPAR E . UNEQUAL E RPAR statement
    (38) while_statement -> WHILE LPAR E . UNEQUAL E RPAR statement ELSE statement
    (39) while_statement -> WHILE LPAR E . EQUAL E RPAR statement
    (40) while_statement -> WHILE LPAR E . EQUAL E RPAR statement ELSE statement

    LESS            shift and go to state 68
    LARGER          shift and go to state 69
    UNEQUAL         shift and go to state 70
    EQUAL           shift and go to state 71


state 45

    (45) E -> ID LBRACKET . NUMBER RBRACKET
    (46) E -> ID LBRACKET . NUMBER COLON NUMBER RBRACKET
    (47) E -> ID LBRACKET . COLON NUMBER RBRACKET
    (48) E -> ID LBRACKET . NUMBER COLON RBRACKET

    NUMBER          shift and go to state 72
    COLON           shift and go to state 73


state 46

    (16) assign_statement -> ID ASSIGN E SEMICOLON .

    ID              reduce using rule 16 (assign_statement -> ID ASSIGN E SEMICOLON .)
    PRINT           reduce using rule 16 (assign_statement -> ID ASSIGN E SEMICOLON .)
    IF              reduce using rule 16 (assign_statement -> ID ASSIGN E SEMICOLON .)
    WHILE           reduce using rule 16 (assign_statement -> ID ASSIGN E SEMICOLON .)
    TEXT_COMMENT    reduce using rule 16 (assign_statement -> ID ASSIGN E SEMICOLON .)
    RBRACE          reduce using rule 16 (assign_statement -> ID ASSIGN E SEMICOLON .)


state 47

    (17) assign_statement -> ID ASSIGN INPUT LPAR . RPAR SEMICOLON
    (18) assign_statement -> ID ASSIGN INPUT LPAR . TEXT RPAR SEMICOLON

    RPAR            shift and go to state 74
    TEXT            shift and go to state 75


state 48

    (54) expression -> LPAR expression . RPAR
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . POW expression

    RPAR            shift and go to state 76
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    POW             shift and go to state 54


state 49

    (57) expression -> ID .

    RPAR            reduce using rule 57 (expression -> ID .)
    PLUS            reduce using rule 57 (expression -> ID .)
    MINUS           reduce using rule 57 (expression -> ID .)
    TIMES           reduce using rule 57 (expression -> ID .)
    DIVIDE          reduce using rule 57 (expression -> ID .)
    POW             reduce using rule 57 (expression -> ID .)
    SEMICOLON       reduce using rule 57 (expression -> ID .)
    LESS            reduce using rule 57 (expression -> ID .)
    LARGER          reduce using rule 57 (expression -> ID .)
    UNEQUAL         reduce using rule 57 (expression -> ID .)
    EQUAL           reduce using rule 57 (expression -> ID .)


state 50

    (49) expression -> expression PLUS . expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression POW expression
    (54) expression -> . LPAR expression RPAR
    (55) expression -> . NUMBER
    (56) expression -> . NUMBER_FLOAT
    (57) expression -> . ID
    (58) expression -> . TEXT

    LPAR            shift and go to state 30
    NUMBER          shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    ID              shift and go to state 49
    TEXT            shift and go to state 31

    expression                     shift and go to state 77

state 51

    (50) expression -> expression MINUS . expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression POW expression
    (54) expression -> . LPAR expression RPAR
    (55) expression -> . NUMBER
    (56) expression -> . NUMBER_FLOAT
    (57) expression -> . ID
    (58) expression -> . TEXT

    LPAR            shift and go to state 30
    NUMBER          shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    ID              shift and go to state 49
    TEXT            shift and go to state 31

    expression                     shift and go to state 78

state 52

    (51) expression -> expression TIMES . expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression POW expression
    (54) expression -> . LPAR expression RPAR
    (55) expression -> . NUMBER
    (56) expression -> . NUMBER_FLOAT
    (57) expression -> . ID
    (58) expression -> . TEXT

    LPAR            shift and go to state 30
    NUMBER          shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    ID              shift and go to state 49
    TEXT            shift and go to state 31

    expression                     shift and go to state 79

state 53

    (52) expression -> expression DIVIDE . expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression POW expression
    (54) expression -> . LPAR expression RPAR
    (55) expression -> . NUMBER
    (56) expression -> . NUMBER_FLOAT
    (57) expression -> . ID
    (58) expression -> . TEXT

    LPAR            shift and go to state 30
    NUMBER          shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    ID              shift and go to state 49
    TEXT            shift and go to state 31

    expression                     shift and go to state 80

state 54

    (53) expression -> expression POW . expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression POW expression
    (54) expression -> . LPAR expression RPAR
    (55) expression -> . NUMBER
    (56) expression -> . NUMBER_FLOAT
    (57) expression -> . ID
    (58) expression -> . TEXT

    LPAR            shift and go to state 30
    NUMBER          shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    ID              shift and go to state 49
    TEXT            shift and go to state 31

    expression                     shift and go to state 81

state 55

    (42) E -> LEN LPAR . ID RPAR

    ID              shift and go to state 82


state 56

    (43) E -> STR LPAR . ID RPAR

    ID              shift and go to state 83


state 57

    (44) E -> CHOP LPAR . ID RPAR

    ID              shift and go to state 84


state 58

    (19) assign_statement -> PRINT LPAR TEXT RPAR . SEMICOLON

    SEMICOLON       shift and go to state 85


state 59

    (23) assign_statement -> PRINT LPAR TEXT COMMA . ID RPAR SEMICOLON

    ID              shift and go to state 86


state 60

    (20) assign_statement -> PRINT LPAR ID RPAR . SEMICOLON

    SEMICOLON       shift and go to state 87


state 61

    (21) assign_statement -> PRINT LPAR NUMBER RPAR . SEMICOLON

    SEMICOLON       shift and go to state 88


state 62

    (22) assign_statement -> PRINT LPAR NUMBER_FLOAT RPAR . SEMICOLON

    SEMICOLON       shift and go to state 89


state 63

    (24) assign_statement -> PRINT LPAR E RPAR . SEMICOLON

    SEMICOLON       shift and go to state 90


state 64

    (25) if_statement -> IF LPAR E LESS . E RPAR statement
    (26) if_statement -> IF LPAR E LESS . E RPAR statement ELSE statement
    (41) E -> . expression
    (42) E -> . LEN LPAR ID RPAR
    (43) E -> . STR LPAR ID RPAR
    (44) E -> . CHOP LPAR ID RPAR
    (45) E -> . ID LBRACKET NUMBER RBRACKET
    (46) E -> . ID LBRACKET NUMBER COLON NUMBER RBRACKET
    (47) E -> . ID LBRACKET COLON NUMBER RBRACKET
    (48) E -> . ID LBRACKET NUMBER COLON RBRACKET
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression POW expression
    (54) expression -> . LPAR expression RPAR
    (55) expression -> . NUMBER
    (56) expression -> . NUMBER_FLOAT
    (57) expression -> . ID
    (58) expression -> . TEXT

    LEN             shift and go to state 33
    STR             shift and go to state 34
    CHOP            shift and go to state 35
    ID              shift and go to state 27
    LPAR            shift and go to state 30
    NUMBER          shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TEXT            shift and go to state 31

    E                              shift and go to state 91
    expression                     shift and go to state 32

state 65

    (27) if_statement -> IF LPAR E LARGER . E RPAR statement
    (28) if_statement -> IF LPAR E LARGER . E RPAR statement ELSE statement
    (41) E -> . expression
    (42) E -> . LEN LPAR ID RPAR
    (43) E -> . STR LPAR ID RPAR
    (44) E -> . CHOP LPAR ID RPAR
    (45) E -> . ID LBRACKET NUMBER RBRACKET
    (46) E -> . ID LBRACKET NUMBER COLON NUMBER RBRACKET
    (47) E -> . ID LBRACKET COLON NUMBER RBRACKET
    (48) E -> . ID LBRACKET NUMBER COLON RBRACKET
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression POW expression
    (54) expression -> . LPAR expression RPAR
    (55) expression -> . NUMBER
    (56) expression -> . NUMBER_FLOAT
    (57) expression -> . ID
    (58) expression -> . TEXT

    LEN             shift and go to state 33
    STR             shift and go to state 34
    CHOP            shift and go to state 35
    ID              shift and go to state 27
    LPAR            shift and go to state 30
    NUMBER          shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TEXT            shift and go to state 31

    E                              shift and go to state 92
    expression                     shift and go to state 32

state 66

    (29) if_statement -> IF LPAR E UNEQUAL . E RPAR statement
    (30) if_statement -> IF LPAR E UNEQUAL . E RPAR statement ELSE statement
    (41) E -> . expression
    (42) E -> . LEN LPAR ID RPAR
    (43) E -> . STR LPAR ID RPAR
    (44) E -> . CHOP LPAR ID RPAR
    (45) E -> . ID LBRACKET NUMBER RBRACKET
    (46) E -> . ID LBRACKET NUMBER COLON NUMBER RBRACKET
    (47) E -> . ID LBRACKET COLON NUMBER RBRACKET
    (48) E -> . ID LBRACKET NUMBER COLON RBRACKET
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression POW expression
    (54) expression -> . LPAR expression RPAR
    (55) expression -> . NUMBER
    (56) expression -> . NUMBER_FLOAT
    (57) expression -> . ID
    (58) expression -> . TEXT

    LEN             shift and go to state 33
    STR             shift and go to state 34
    CHOP            shift and go to state 35
    ID              shift and go to state 27
    LPAR            shift and go to state 30
    NUMBER          shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TEXT            shift and go to state 31

    E                              shift and go to state 93
    expression                     shift and go to state 32

state 67

    (31) if_statement -> IF LPAR E EQUAL . E RPAR statement
    (32) if_statement -> IF LPAR E EQUAL . E RPAR statement ELSE statement
    (41) E -> . expression
    (42) E -> . LEN LPAR ID RPAR
    (43) E -> . STR LPAR ID RPAR
    (44) E -> . CHOP LPAR ID RPAR
    (45) E -> . ID LBRACKET NUMBER RBRACKET
    (46) E -> . ID LBRACKET NUMBER COLON NUMBER RBRACKET
    (47) E -> . ID LBRACKET COLON NUMBER RBRACKET
    (48) E -> . ID LBRACKET NUMBER COLON RBRACKET
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression POW expression
    (54) expression -> . LPAR expression RPAR
    (55) expression -> . NUMBER
    (56) expression -> . NUMBER_FLOAT
    (57) expression -> . ID
    (58) expression -> . TEXT

    LEN             shift and go to state 33
    STR             shift and go to state 34
    CHOP            shift and go to state 35
    ID              shift and go to state 27
    LPAR            shift and go to state 30
    NUMBER          shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TEXT            shift and go to state 31

    E                              shift and go to state 94
    expression                     shift and go to state 32

state 68

    (33) while_statement -> WHILE LPAR E LESS . E RPAR statement
    (34) while_statement -> WHILE LPAR E LESS . E RPAR statement ELSE statement
    (41) E -> . expression
    (42) E -> . LEN LPAR ID RPAR
    (43) E -> . STR LPAR ID RPAR
    (44) E -> . CHOP LPAR ID RPAR
    (45) E -> . ID LBRACKET NUMBER RBRACKET
    (46) E -> . ID LBRACKET NUMBER COLON NUMBER RBRACKET
    (47) E -> . ID LBRACKET COLON NUMBER RBRACKET
    (48) E -> . ID LBRACKET NUMBER COLON RBRACKET
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression POW expression
    (54) expression -> . LPAR expression RPAR
    (55) expression -> . NUMBER
    (56) expression -> . NUMBER_FLOAT
    (57) expression -> . ID
    (58) expression -> . TEXT

    LEN             shift and go to state 33
    STR             shift and go to state 34
    CHOP            shift and go to state 35
    ID              shift and go to state 27
    LPAR            shift and go to state 30
    NUMBER          shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TEXT            shift and go to state 31

    E                              shift and go to state 95
    expression                     shift and go to state 32

state 69

    (35) while_statement -> WHILE LPAR E LARGER . E RPAR statement
    (36) while_statement -> WHILE LPAR E LARGER . E RPAR statement ELSE statement
    (41) E -> . expression
    (42) E -> . LEN LPAR ID RPAR
    (43) E -> . STR LPAR ID RPAR
    (44) E -> . CHOP LPAR ID RPAR
    (45) E -> . ID LBRACKET NUMBER RBRACKET
    (46) E -> . ID LBRACKET NUMBER COLON NUMBER RBRACKET
    (47) E -> . ID LBRACKET COLON NUMBER RBRACKET
    (48) E -> . ID LBRACKET NUMBER COLON RBRACKET
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression POW expression
    (54) expression -> . LPAR expression RPAR
    (55) expression -> . NUMBER
    (56) expression -> . NUMBER_FLOAT
    (57) expression -> . ID
    (58) expression -> . TEXT

    LEN             shift and go to state 33
    STR             shift and go to state 34
    CHOP            shift and go to state 35
    ID              shift and go to state 27
    LPAR            shift and go to state 30
    NUMBER          shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TEXT            shift and go to state 31

    E                              shift and go to state 96
    expression                     shift and go to state 32

state 70

    (37) while_statement -> WHILE LPAR E UNEQUAL . E RPAR statement
    (38) while_statement -> WHILE LPAR E UNEQUAL . E RPAR statement ELSE statement
    (41) E -> . expression
    (42) E -> . LEN LPAR ID RPAR
    (43) E -> . STR LPAR ID RPAR
    (44) E -> . CHOP LPAR ID RPAR
    (45) E -> . ID LBRACKET NUMBER RBRACKET
    (46) E -> . ID LBRACKET NUMBER COLON NUMBER RBRACKET
    (47) E -> . ID LBRACKET COLON NUMBER RBRACKET
    (48) E -> . ID LBRACKET NUMBER COLON RBRACKET
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression POW expression
    (54) expression -> . LPAR expression RPAR
    (55) expression -> . NUMBER
    (56) expression -> . NUMBER_FLOAT
    (57) expression -> . ID
    (58) expression -> . TEXT

    LEN             shift and go to state 33
    STR             shift and go to state 34
    CHOP            shift and go to state 35
    ID              shift and go to state 27
    LPAR            shift and go to state 30
    NUMBER          shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TEXT            shift and go to state 31

    E                              shift and go to state 97
    expression                     shift and go to state 32

state 71

    (39) while_statement -> WHILE LPAR E EQUAL . E RPAR statement
    (40) while_statement -> WHILE LPAR E EQUAL . E RPAR statement ELSE statement
    (41) E -> . expression
    (42) E -> . LEN LPAR ID RPAR
    (43) E -> . STR LPAR ID RPAR
    (44) E -> . CHOP LPAR ID RPAR
    (45) E -> . ID LBRACKET NUMBER RBRACKET
    (46) E -> . ID LBRACKET NUMBER COLON NUMBER RBRACKET
    (47) E -> . ID LBRACKET COLON NUMBER RBRACKET
    (48) E -> . ID LBRACKET NUMBER COLON RBRACKET
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression POW expression
    (54) expression -> . LPAR expression RPAR
    (55) expression -> . NUMBER
    (56) expression -> . NUMBER_FLOAT
    (57) expression -> . ID
    (58) expression -> . TEXT

    LEN             shift and go to state 33
    STR             shift and go to state 34
    CHOP            shift and go to state 35
    ID              shift and go to state 27
    LPAR            shift and go to state 30
    NUMBER          shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TEXT            shift and go to state 31

    E                              shift and go to state 98
    expression                     shift and go to state 32

state 72

    (45) E -> ID LBRACKET NUMBER . RBRACKET
    (46) E -> ID LBRACKET NUMBER . COLON NUMBER RBRACKET
    (48) E -> ID LBRACKET NUMBER . COLON RBRACKET

    RBRACKET        shift and go to state 99
    COLON           shift and go to state 100


state 73

    (47) E -> ID LBRACKET COLON . NUMBER RBRACKET

    NUMBER          shift and go to state 101


state 74

    (17) assign_statement -> ID ASSIGN INPUT LPAR RPAR . SEMICOLON

    SEMICOLON       shift and go to state 102


state 75

    (18) assign_statement -> ID ASSIGN INPUT LPAR TEXT . RPAR SEMICOLON

    RPAR            shift and go to state 103


state 76

    (54) expression -> LPAR expression RPAR .

    PLUS            reduce using rule 54 (expression -> LPAR expression RPAR .)
    MINUS           reduce using rule 54 (expression -> LPAR expression RPAR .)
    TIMES           reduce using rule 54 (expression -> LPAR expression RPAR .)
    DIVIDE          reduce using rule 54 (expression -> LPAR expression RPAR .)
    POW             reduce using rule 54 (expression -> LPAR expression RPAR .)
    SEMICOLON       reduce using rule 54 (expression -> LPAR expression RPAR .)
    RPAR            reduce using rule 54 (expression -> LPAR expression RPAR .)
    LESS            reduce using rule 54 (expression -> LPAR expression RPAR .)
    LARGER          reduce using rule 54 (expression -> LPAR expression RPAR .)
    UNEQUAL         reduce using rule 54 (expression -> LPAR expression RPAR .)
    EQUAL           reduce using rule 54 (expression -> LPAR expression RPAR .)


state 77

    (49) expression -> expression PLUS expression .
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . POW expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POW resolved as shift
    SEMICOLON       reduce using rule 49 (expression -> expression PLUS expression .)
    RPAR            reduce using rule 49 (expression -> expression PLUS expression .)
    LESS            reduce using rule 49 (expression -> expression PLUS expression .)
    LARGER          reduce using rule 49 (expression -> expression PLUS expression .)
    UNEQUAL         reduce using rule 49 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 49 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    POW             shift and go to state 54

  ! PLUS            [ reduce using rule 49 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 49 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression PLUS expression .) ]
  ! POW             [ reduce using rule 49 (expression -> expression PLUS expression .) ]


state 78

    (50) expression -> expression MINUS expression .
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . POW expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POW resolved as shift
    SEMICOLON       reduce using rule 50 (expression -> expression MINUS expression .)
    RPAR            reduce using rule 50 (expression -> expression MINUS expression .)
    LESS            reduce using rule 50 (expression -> expression MINUS expression .)
    LARGER          reduce using rule 50 (expression -> expression MINUS expression .)
    UNEQUAL         reduce using rule 50 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 50 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    POW             shift and go to state 54

  ! PLUS            [ reduce using rule 50 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 50 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> expression MINUS expression .) ]
  ! POW             [ reduce using rule 50 (expression -> expression MINUS expression .) ]


state 79

    (51) expression -> expression TIMES expression .
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . POW expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POW resolved as shift
    SEMICOLON       reduce using rule 51 (expression -> expression TIMES expression .)
    RPAR            reduce using rule 51 (expression -> expression TIMES expression .)
    LESS            reduce using rule 51 (expression -> expression TIMES expression .)
    LARGER          reduce using rule 51 (expression -> expression TIMES expression .)
    UNEQUAL         reduce using rule 51 (expression -> expression TIMES expression .)
    EQUAL           reduce using rule 51 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    POW             shift and go to state 54

  ! PLUS            [ reduce using rule 51 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 51 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> expression TIMES expression .) ]
  ! POW             [ reduce using rule 51 (expression -> expression TIMES expression .) ]


state 80

    (52) expression -> expression DIVIDE expression .
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . POW expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POW resolved as shift
    SEMICOLON       reduce using rule 52 (expression -> expression DIVIDE expression .)
    RPAR            reduce using rule 52 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 52 (expression -> expression DIVIDE expression .)
    LARGER          reduce using rule 52 (expression -> expression DIVIDE expression .)
    UNEQUAL         reduce using rule 52 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 52 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    POW             shift and go to state 54

  ! PLUS            [ reduce using rule 52 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 52 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> expression DIVIDE expression .) ]
  ! POW             [ reduce using rule 52 (expression -> expression DIVIDE expression .) ]


state 81

    (53) expression -> expression POW expression .
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . POW expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POW resolved as shift
    SEMICOLON       reduce using rule 53 (expression -> expression POW expression .)
    RPAR            reduce using rule 53 (expression -> expression POW expression .)
    LESS            reduce using rule 53 (expression -> expression POW expression .)
    LARGER          reduce using rule 53 (expression -> expression POW expression .)
    UNEQUAL         reduce using rule 53 (expression -> expression POW expression .)
    EQUAL           reduce using rule 53 (expression -> expression POW expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    POW             shift and go to state 54

  ! PLUS            [ reduce using rule 53 (expression -> expression POW expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression POW expression .) ]
  ! TIMES           [ reduce using rule 53 (expression -> expression POW expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> expression POW expression .) ]
  ! POW             [ reduce using rule 53 (expression -> expression POW expression .) ]


state 82

    (42) E -> LEN LPAR ID . RPAR

    RPAR            shift and go to state 104


state 83

    (43) E -> STR LPAR ID . RPAR

    RPAR            shift and go to state 105


state 84

    (44) E -> CHOP LPAR ID . RPAR

    RPAR            shift and go to state 106


state 85

    (19) assign_statement -> PRINT LPAR TEXT RPAR SEMICOLON .

    ID              reduce using rule 19 (assign_statement -> PRINT LPAR TEXT RPAR SEMICOLON .)
    PRINT           reduce using rule 19 (assign_statement -> PRINT LPAR TEXT RPAR SEMICOLON .)
    IF              reduce using rule 19 (assign_statement -> PRINT LPAR TEXT RPAR SEMICOLON .)
    WHILE           reduce using rule 19 (assign_statement -> PRINT LPAR TEXT RPAR SEMICOLON .)
    TEXT_COMMENT    reduce using rule 19 (assign_statement -> PRINT LPAR TEXT RPAR SEMICOLON .)
    RBRACE          reduce using rule 19 (assign_statement -> PRINT LPAR TEXT RPAR SEMICOLON .)


state 86

    (23) assign_statement -> PRINT LPAR TEXT COMMA ID . RPAR SEMICOLON

    RPAR            shift and go to state 107


state 87

    (20) assign_statement -> PRINT LPAR ID RPAR SEMICOLON .

    ID              reduce using rule 20 (assign_statement -> PRINT LPAR ID RPAR SEMICOLON .)
    PRINT           reduce using rule 20 (assign_statement -> PRINT LPAR ID RPAR SEMICOLON .)
    IF              reduce using rule 20 (assign_statement -> PRINT LPAR ID RPAR SEMICOLON .)
    WHILE           reduce using rule 20 (assign_statement -> PRINT LPAR ID RPAR SEMICOLON .)
    TEXT_COMMENT    reduce using rule 20 (assign_statement -> PRINT LPAR ID RPAR SEMICOLON .)
    RBRACE          reduce using rule 20 (assign_statement -> PRINT LPAR ID RPAR SEMICOLON .)


state 88

    (21) assign_statement -> PRINT LPAR NUMBER RPAR SEMICOLON .

    ID              reduce using rule 21 (assign_statement -> PRINT LPAR NUMBER RPAR SEMICOLON .)
    PRINT           reduce using rule 21 (assign_statement -> PRINT LPAR NUMBER RPAR SEMICOLON .)
    IF              reduce using rule 21 (assign_statement -> PRINT LPAR NUMBER RPAR SEMICOLON .)
    WHILE           reduce using rule 21 (assign_statement -> PRINT LPAR NUMBER RPAR SEMICOLON .)
    TEXT_COMMENT    reduce using rule 21 (assign_statement -> PRINT LPAR NUMBER RPAR SEMICOLON .)
    RBRACE          reduce using rule 21 (assign_statement -> PRINT LPAR NUMBER RPAR SEMICOLON .)


state 89

    (22) assign_statement -> PRINT LPAR NUMBER_FLOAT RPAR SEMICOLON .

    ID              reduce using rule 22 (assign_statement -> PRINT LPAR NUMBER_FLOAT RPAR SEMICOLON .)
    PRINT           reduce using rule 22 (assign_statement -> PRINT LPAR NUMBER_FLOAT RPAR SEMICOLON .)
    IF              reduce using rule 22 (assign_statement -> PRINT LPAR NUMBER_FLOAT RPAR SEMICOLON .)
    WHILE           reduce using rule 22 (assign_statement -> PRINT LPAR NUMBER_FLOAT RPAR SEMICOLON .)
    TEXT_COMMENT    reduce using rule 22 (assign_statement -> PRINT LPAR NUMBER_FLOAT RPAR SEMICOLON .)
    RBRACE          reduce using rule 22 (assign_statement -> PRINT LPAR NUMBER_FLOAT RPAR SEMICOLON .)


state 90

    (24) assign_statement -> PRINT LPAR E RPAR SEMICOLON .

    ID              reduce using rule 24 (assign_statement -> PRINT LPAR E RPAR SEMICOLON .)
    PRINT           reduce using rule 24 (assign_statement -> PRINT LPAR E RPAR SEMICOLON .)
    IF              reduce using rule 24 (assign_statement -> PRINT LPAR E RPAR SEMICOLON .)
    WHILE           reduce using rule 24 (assign_statement -> PRINT LPAR E RPAR SEMICOLON .)
    TEXT_COMMENT    reduce using rule 24 (assign_statement -> PRINT LPAR E RPAR SEMICOLON .)
    RBRACE          reduce using rule 24 (assign_statement -> PRINT LPAR E RPAR SEMICOLON .)


state 91

    (25) if_statement -> IF LPAR E LESS E . RPAR statement
    (26) if_statement -> IF LPAR E LESS E . RPAR statement ELSE statement

    RPAR            shift and go to state 108


state 92

    (27) if_statement -> IF LPAR E LARGER E . RPAR statement
    (28) if_statement -> IF LPAR E LARGER E . RPAR statement ELSE statement

    RPAR            shift and go to state 109


state 93

    (29) if_statement -> IF LPAR E UNEQUAL E . RPAR statement
    (30) if_statement -> IF LPAR E UNEQUAL E . RPAR statement ELSE statement

    RPAR            shift and go to state 110


state 94

    (31) if_statement -> IF LPAR E EQUAL E . RPAR statement
    (32) if_statement -> IF LPAR E EQUAL E . RPAR statement ELSE statement

    RPAR            shift and go to state 111


state 95

    (33) while_statement -> WHILE LPAR E LESS E . RPAR statement
    (34) while_statement -> WHILE LPAR E LESS E . RPAR statement ELSE statement

    RPAR            shift and go to state 112


state 96

    (35) while_statement -> WHILE LPAR E LARGER E . RPAR statement
    (36) while_statement -> WHILE LPAR E LARGER E . RPAR statement ELSE statement

    RPAR            shift and go to state 113


state 97

    (37) while_statement -> WHILE LPAR E UNEQUAL E . RPAR statement
    (38) while_statement -> WHILE LPAR E UNEQUAL E . RPAR statement ELSE statement

    RPAR            shift and go to state 114


state 98

    (39) while_statement -> WHILE LPAR E EQUAL E . RPAR statement
    (40) while_statement -> WHILE LPAR E EQUAL E . RPAR statement ELSE statement

    RPAR            shift and go to state 115


state 99

    (45) E -> ID LBRACKET NUMBER RBRACKET .

    SEMICOLON       reduce using rule 45 (E -> ID LBRACKET NUMBER RBRACKET .)
    RPAR            reduce using rule 45 (E -> ID LBRACKET NUMBER RBRACKET .)
    LESS            reduce using rule 45 (E -> ID LBRACKET NUMBER RBRACKET .)
    LARGER          reduce using rule 45 (E -> ID LBRACKET NUMBER RBRACKET .)
    UNEQUAL         reduce using rule 45 (E -> ID LBRACKET NUMBER RBRACKET .)
    EQUAL           reduce using rule 45 (E -> ID LBRACKET NUMBER RBRACKET .)


state 100

    (46) E -> ID LBRACKET NUMBER COLON . NUMBER RBRACKET
    (48) E -> ID LBRACKET NUMBER COLON . RBRACKET

    NUMBER          shift and go to state 116
    RBRACKET        shift and go to state 117


state 101

    (47) E -> ID LBRACKET COLON NUMBER . RBRACKET

    RBRACKET        shift and go to state 118


state 102

    (17) assign_statement -> ID ASSIGN INPUT LPAR RPAR SEMICOLON .

    ID              reduce using rule 17 (assign_statement -> ID ASSIGN INPUT LPAR RPAR SEMICOLON .)
    PRINT           reduce using rule 17 (assign_statement -> ID ASSIGN INPUT LPAR RPAR SEMICOLON .)
    IF              reduce using rule 17 (assign_statement -> ID ASSIGN INPUT LPAR RPAR SEMICOLON .)
    WHILE           reduce using rule 17 (assign_statement -> ID ASSIGN INPUT LPAR RPAR SEMICOLON .)
    TEXT_COMMENT    reduce using rule 17 (assign_statement -> ID ASSIGN INPUT LPAR RPAR SEMICOLON .)
    RBRACE          reduce using rule 17 (assign_statement -> ID ASSIGN INPUT LPAR RPAR SEMICOLON .)


state 103

    (18) assign_statement -> ID ASSIGN INPUT LPAR TEXT RPAR . SEMICOLON

    SEMICOLON       shift and go to state 119


state 104

    (42) E -> LEN LPAR ID RPAR .

    SEMICOLON       reduce using rule 42 (E -> LEN LPAR ID RPAR .)
    RPAR            reduce using rule 42 (E -> LEN LPAR ID RPAR .)
    LESS            reduce using rule 42 (E -> LEN LPAR ID RPAR .)
    LARGER          reduce using rule 42 (E -> LEN LPAR ID RPAR .)
    UNEQUAL         reduce using rule 42 (E -> LEN LPAR ID RPAR .)
    EQUAL           reduce using rule 42 (E -> LEN LPAR ID RPAR .)


state 105

    (43) E -> STR LPAR ID RPAR .

    SEMICOLON       reduce using rule 43 (E -> STR LPAR ID RPAR .)
    RPAR            reduce using rule 43 (E -> STR LPAR ID RPAR .)
    LESS            reduce using rule 43 (E -> STR LPAR ID RPAR .)
    LARGER          reduce using rule 43 (E -> STR LPAR ID RPAR .)
    UNEQUAL         reduce using rule 43 (E -> STR LPAR ID RPAR .)
    EQUAL           reduce using rule 43 (E -> STR LPAR ID RPAR .)


state 106

    (44) E -> CHOP LPAR ID RPAR .

    SEMICOLON       reduce using rule 44 (E -> CHOP LPAR ID RPAR .)
    RPAR            reduce using rule 44 (E -> CHOP LPAR ID RPAR .)
    LESS            reduce using rule 44 (E -> CHOP LPAR ID RPAR .)
    LARGER          reduce using rule 44 (E -> CHOP LPAR ID RPAR .)
    UNEQUAL         reduce using rule 44 (E -> CHOP LPAR ID RPAR .)
    EQUAL           reduce using rule 44 (E -> CHOP LPAR ID RPAR .)


state 107

    (23) assign_statement -> PRINT LPAR TEXT COMMA ID RPAR . SEMICOLON

    SEMICOLON       shift and go to state 120


state 108

    (25) if_statement -> IF LPAR E LESS E RPAR . statement
    (26) if_statement -> IF LPAR E LESS E RPAR . statement ELSE statement
    (7) statement -> . LBRACE state RBRACE

    LBRACE          shift and go to state 6

    statement                      shift and go to state 121

state 109

    (27) if_statement -> IF LPAR E LARGER E RPAR . statement
    (28) if_statement -> IF LPAR E LARGER E RPAR . statement ELSE statement
    (7) statement -> . LBRACE state RBRACE

    LBRACE          shift and go to state 6

    statement                      shift and go to state 122

state 110

    (29) if_statement -> IF LPAR E UNEQUAL E RPAR . statement
    (30) if_statement -> IF LPAR E UNEQUAL E RPAR . statement ELSE statement
    (7) statement -> . LBRACE state RBRACE

    LBRACE          shift and go to state 6

    statement                      shift and go to state 123

state 111

    (31) if_statement -> IF LPAR E EQUAL E RPAR . statement
    (32) if_statement -> IF LPAR E EQUAL E RPAR . statement ELSE statement
    (7) statement -> . LBRACE state RBRACE

    LBRACE          shift and go to state 6

    statement                      shift and go to state 124

state 112

    (33) while_statement -> WHILE LPAR E LESS E RPAR . statement
    (34) while_statement -> WHILE LPAR E LESS E RPAR . statement ELSE statement
    (7) statement -> . LBRACE state RBRACE

    LBRACE          shift and go to state 6

    statement                      shift and go to state 125

state 113

    (35) while_statement -> WHILE LPAR E LARGER E RPAR . statement
    (36) while_statement -> WHILE LPAR E LARGER E RPAR . statement ELSE statement
    (7) statement -> . LBRACE state RBRACE

    LBRACE          shift and go to state 6

    statement                      shift and go to state 126

state 114

    (37) while_statement -> WHILE LPAR E UNEQUAL E RPAR . statement
    (38) while_statement -> WHILE LPAR E UNEQUAL E RPAR . statement ELSE statement
    (7) statement -> . LBRACE state RBRACE

    LBRACE          shift and go to state 6

    statement                      shift and go to state 127

state 115

    (39) while_statement -> WHILE LPAR E EQUAL E RPAR . statement
    (40) while_statement -> WHILE LPAR E EQUAL E RPAR . statement ELSE statement
    (7) statement -> . LBRACE state RBRACE

    LBRACE          shift and go to state 6

    statement                      shift and go to state 128

state 116

    (46) E -> ID LBRACKET NUMBER COLON NUMBER . RBRACKET

    RBRACKET        shift and go to state 129


state 117

    (48) E -> ID LBRACKET NUMBER COLON RBRACKET .

    SEMICOLON       reduce using rule 48 (E -> ID LBRACKET NUMBER COLON RBRACKET .)
    RPAR            reduce using rule 48 (E -> ID LBRACKET NUMBER COLON RBRACKET .)
    LESS            reduce using rule 48 (E -> ID LBRACKET NUMBER COLON RBRACKET .)
    LARGER          reduce using rule 48 (E -> ID LBRACKET NUMBER COLON RBRACKET .)
    UNEQUAL         reduce using rule 48 (E -> ID LBRACKET NUMBER COLON RBRACKET .)
    EQUAL           reduce using rule 48 (E -> ID LBRACKET NUMBER COLON RBRACKET .)


state 118

    (47) E -> ID LBRACKET COLON NUMBER RBRACKET .

    SEMICOLON       reduce using rule 47 (E -> ID LBRACKET COLON NUMBER RBRACKET .)
    RPAR            reduce using rule 47 (E -> ID LBRACKET COLON NUMBER RBRACKET .)
    LESS            reduce using rule 47 (E -> ID LBRACKET COLON NUMBER RBRACKET .)
    LARGER          reduce using rule 47 (E -> ID LBRACKET COLON NUMBER RBRACKET .)
    UNEQUAL         reduce using rule 47 (E -> ID LBRACKET COLON NUMBER RBRACKET .)
    EQUAL           reduce using rule 47 (E -> ID LBRACKET COLON NUMBER RBRACKET .)


state 119

    (18) assign_statement -> ID ASSIGN INPUT LPAR TEXT RPAR SEMICOLON .

    ID              reduce using rule 18 (assign_statement -> ID ASSIGN INPUT LPAR TEXT RPAR SEMICOLON .)
    PRINT           reduce using rule 18 (assign_statement -> ID ASSIGN INPUT LPAR TEXT RPAR SEMICOLON .)
    IF              reduce using rule 18 (assign_statement -> ID ASSIGN INPUT LPAR TEXT RPAR SEMICOLON .)
    WHILE           reduce using rule 18 (assign_statement -> ID ASSIGN INPUT LPAR TEXT RPAR SEMICOLON .)
    TEXT_COMMENT    reduce using rule 18 (assign_statement -> ID ASSIGN INPUT LPAR TEXT RPAR SEMICOLON .)
    RBRACE          reduce using rule 18 (assign_statement -> ID ASSIGN INPUT LPAR TEXT RPAR SEMICOLON .)


state 120

    (23) assign_statement -> PRINT LPAR TEXT COMMA ID RPAR SEMICOLON .

    ID              reduce using rule 23 (assign_statement -> PRINT LPAR TEXT COMMA ID RPAR SEMICOLON .)
    PRINT           reduce using rule 23 (assign_statement -> PRINT LPAR TEXT COMMA ID RPAR SEMICOLON .)
    IF              reduce using rule 23 (assign_statement -> PRINT LPAR TEXT COMMA ID RPAR SEMICOLON .)
    WHILE           reduce using rule 23 (assign_statement -> PRINT LPAR TEXT COMMA ID RPAR SEMICOLON .)
    TEXT_COMMENT    reduce using rule 23 (assign_statement -> PRINT LPAR TEXT COMMA ID RPAR SEMICOLON .)
    RBRACE          reduce using rule 23 (assign_statement -> PRINT LPAR TEXT COMMA ID RPAR SEMICOLON .)


state 121

    (25) if_statement -> IF LPAR E LESS E RPAR statement .
    (26) if_statement -> IF LPAR E LESS E RPAR statement . ELSE statement

    ID              reduce using rule 25 (if_statement -> IF LPAR E LESS E RPAR statement .)
    PRINT           reduce using rule 25 (if_statement -> IF LPAR E LESS E RPAR statement .)
    IF              reduce using rule 25 (if_statement -> IF LPAR E LESS E RPAR statement .)
    WHILE           reduce using rule 25 (if_statement -> IF LPAR E LESS E RPAR statement .)
    TEXT_COMMENT    reduce using rule 25 (if_statement -> IF LPAR E LESS E RPAR statement .)
    RBRACE          reduce using rule 25 (if_statement -> IF LPAR E LESS E RPAR statement .)
    ELSE            shift and go to state 130


state 122

    (27) if_statement -> IF LPAR E LARGER E RPAR statement .
    (28) if_statement -> IF LPAR E LARGER E RPAR statement . ELSE statement

    ID              reduce using rule 27 (if_statement -> IF LPAR E LARGER E RPAR statement .)
    PRINT           reduce using rule 27 (if_statement -> IF LPAR E LARGER E RPAR statement .)
    IF              reduce using rule 27 (if_statement -> IF LPAR E LARGER E RPAR statement .)
    WHILE           reduce using rule 27 (if_statement -> IF LPAR E LARGER E RPAR statement .)
    TEXT_COMMENT    reduce using rule 27 (if_statement -> IF LPAR E LARGER E RPAR statement .)
    RBRACE          reduce using rule 27 (if_statement -> IF LPAR E LARGER E RPAR statement .)
    ELSE            shift and go to state 131


state 123

    (29) if_statement -> IF LPAR E UNEQUAL E RPAR statement .
    (30) if_statement -> IF LPAR E UNEQUAL E RPAR statement . ELSE statement

    ID              reduce using rule 29 (if_statement -> IF LPAR E UNEQUAL E RPAR statement .)
    PRINT           reduce using rule 29 (if_statement -> IF LPAR E UNEQUAL E RPAR statement .)
    IF              reduce using rule 29 (if_statement -> IF LPAR E UNEQUAL E RPAR statement .)
    WHILE           reduce using rule 29 (if_statement -> IF LPAR E UNEQUAL E RPAR statement .)
    TEXT_COMMENT    reduce using rule 29 (if_statement -> IF LPAR E UNEQUAL E RPAR statement .)
    RBRACE          reduce using rule 29 (if_statement -> IF LPAR E UNEQUAL E RPAR statement .)
    ELSE            shift and go to state 132


state 124

    (31) if_statement -> IF LPAR E EQUAL E RPAR statement .
    (32) if_statement -> IF LPAR E EQUAL E RPAR statement . ELSE statement

    ID              reduce using rule 31 (if_statement -> IF LPAR E EQUAL E RPAR statement .)
    PRINT           reduce using rule 31 (if_statement -> IF LPAR E EQUAL E RPAR statement .)
    IF              reduce using rule 31 (if_statement -> IF LPAR E EQUAL E RPAR statement .)
    WHILE           reduce using rule 31 (if_statement -> IF LPAR E EQUAL E RPAR statement .)
    TEXT_COMMENT    reduce using rule 31 (if_statement -> IF LPAR E EQUAL E RPAR statement .)
    RBRACE          reduce using rule 31 (if_statement -> IF LPAR E EQUAL E RPAR statement .)
    ELSE            shift and go to state 133


state 125

    (33) while_statement -> WHILE LPAR E LESS E RPAR statement .
    (34) while_statement -> WHILE LPAR E LESS E RPAR statement . ELSE statement

    ID              reduce using rule 33 (while_statement -> WHILE LPAR E LESS E RPAR statement .)
    PRINT           reduce using rule 33 (while_statement -> WHILE LPAR E LESS E RPAR statement .)
    IF              reduce using rule 33 (while_statement -> WHILE LPAR E LESS E RPAR statement .)
    WHILE           reduce using rule 33 (while_statement -> WHILE LPAR E LESS E RPAR statement .)
    TEXT_COMMENT    reduce using rule 33 (while_statement -> WHILE LPAR E LESS E RPAR statement .)
    RBRACE          reduce using rule 33 (while_statement -> WHILE LPAR E LESS E RPAR statement .)
    ELSE            shift and go to state 134


state 126

    (35) while_statement -> WHILE LPAR E LARGER E RPAR statement .
    (36) while_statement -> WHILE LPAR E LARGER E RPAR statement . ELSE statement

    ID              reduce using rule 35 (while_statement -> WHILE LPAR E LARGER E RPAR statement .)
    PRINT           reduce using rule 35 (while_statement -> WHILE LPAR E LARGER E RPAR statement .)
    IF              reduce using rule 35 (while_statement -> WHILE LPAR E LARGER E RPAR statement .)
    WHILE           reduce using rule 35 (while_statement -> WHILE LPAR E LARGER E RPAR statement .)
    TEXT_COMMENT    reduce using rule 35 (while_statement -> WHILE LPAR E LARGER E RPAR statement .)
    RBRACE          reduce using rule 35 (while_statement -> WHILE LPAR E LARGER E RPAR statement .)
    ELSE            shift and go to state 135


state 127

    (37) while_statement -> WHILE LPAR E UNEQUAL E RPAR statement .
    (38) while_statement -> WHILE LPAR E UNEQUAL E RPAR statement . ELSE statement

    ID              reduce using rule 37 (while_statement -> WHILE LPAR E UNEQUAL E RPAR statement .)
    PRINT           reduce using rule 37 (while_statement -> WHILE LPAR E UNEQUAL E RPAR statement .)
    IF              reduce using rule 37 (while_statement -> WHILE LPAR E UNEQUAL E RPAR statement .)
    WHILE           reduce using rule 37 (while_statement -> WHILE LPAR E UNEQUAL E RPAR statement .)
    TEXT_COMMENT    reduce using rule 37 (while_statement -> WHILE LPAR E UNEQUAL E RPAR statement .)
    RBRACE          reduce using rule 37 (while_statement -> WHILE LPAR E UNEQUAL E RPAR statement .)
    ELSE            shift and go to state 136


state 128

    (39) while_statement -> WHILE LPAR E EQUAL E RPAR statement .
    (40) while_statement -> WHILE LPAR E EQUAL E RPAR statement . ELSE statement

    ID              reduce using rule 39 (while_statement -> WHILE LPAR E EQUAL E RPAR statement .)
    PRINT           reduce using rule 39 (while_statement -> WHILE LPAR E EQUAL E RPAR statement .)
    IF              reduce using rule 39 (while_statement -> WHILE LPAR E EQUAL E RPAR statement .)
    WHILE           reduce using rule 39 (while_statement -> WHILE LPAR E EQUAL E RPAR statement .)
    TEXT_COMMENT    reduce using rule 39 (while_statement -> WHILE LPAR E EQUAL E RPAR statement .)
    RBRACE          reduce using rule 39 (while_statement -> WHILE LPAR E EQUAL E RPAR statement .)
    ELSE            shift and go to state 137


state 129

    (46) E -> ID LBRACKET NUMBER COLON NUMBER RBRACKET .

    SEMICOLON       reduce using rule 46 (E -> ID LBRACKET NUMBER COLON NUMBER RBRACKET .)
    RPAR            reduce using rule 46 (E -> ID LBRACKET NUMBER COLON NUMBER RBRACKET .)
    LESS            reduce using rule 46 (E -> ID LBRACKET NUMBER COLON NUMBER RBRACKET .)
    LARGER          reduce using rule 46 (E -> ID LBRACKET NUMBER COLON NUMBER RBRACKET .)
    UNEQUAL         reduce using rule 46 (E -> ID LBRACKET NUMBER COLON NUMBER RBRACKET .)
    EQUAL           reduce using rule 46 (E -> ID LBRACKET NUMBER COLON NUMBER RBRACKET .)


state 130

    (26) if_statement -> IF LPAR E LESS E RPAR statement ELSE . statement
    (7) statement -> . LBRACE state RBRACE

    LBRACE          shift and go to state 6

    statement                      shift and go to state 138

state 131

    (28) if_statement -> IF LPAR E LARGER E RPAR statement ELSE . statement
    (7) statement -> . LBRACE state RBRACE

    LBRACE          shift and go to state 6

    statement                      shift and go to state 139

state 132

    (30) if_statement -> IF LPAR E UNEQUAL E RPAR statement ELSE . statement
    (7) statement -> . LBRACE state RBRACE

    LBRACE          shift and go to state 6

    statement                      shift and go to state 140

state 133

    (32) if_statement -> IF LPAR E EQUAL E RPAR statement ELSE . statement
    (7) statement -> . LBRACE state RBRACE

    LBRACE          shift and go to state 6

    statement                      shift and go to state 141

state 134

    (34) while_statement -> WHILE LPAR E LESS E RPAR statement ELSE . statement
    (7) statement -> . LBRACE state RBRACE

    LBRACE          shift and go to state 6

    statement                      shift and go to state 142

state 135

    (36) while_statement -> WHILE LPAR E LARGER E RPAR statement ELSE . statement
    (7) statement -> . LBRACE state RBRACE

    LBRACE          shift and go to state 6

    statement                      shift and go to state 143

state 136

    (38) while_statement -> WHILE LPAR E UNEQUAL E RPAR statement ELSE . statement
    (7) statement -> . LBRACE state RBRACE

    LBRACE          shift and go to state 6

    statement                      shift and go to state 144

state 137

    (40) while_statement -> WHILE LPAR E EQUAL E RPAR statement ELSE . statement
    (7) statement -> . LBRACE state RBRACE

    LBRACE          shift and go to state 6

    statement                      shift and go to state 145

state 138

    (26) if_statement -> IF LPAR E LESS E RPAR statement ELSE statement .

    ID              reduce using rule 26 (if_statement -> IF LPAR E LESS E RPAR statement ELSE statement .)
    PRINT           reduce using rule 26 (if_statement -> IF LPAR E LESS E RPAR statement ELSE statement .)
    IF              reduce using rule 26 (if_statement -> IF LPAR E LESS E RPAR statement ELSE statement .)
    WHILE           reduce using rule 26 (if_statement -> IF LPAR E LESS E RPAR statement ELSE statement .)
    TEXT_COMMENT    reduce using rule 26 (if_statement -> IF LPAR E LESS E RPAR statement ELSE statement .)
    RBRACE          reduce using rule 26 (if_statement -> IF LPAR E LESS E RPAR statement ELSE statement .)


state 139

    (28) if_statement -> IF LPAR E LARGER E RPAR statement ELSE statement .

    ID              reduce using rule 28 (if_statement -> IF LPAR E LARGER E RPAR statement ELSE statement .)
    PRINT           reduce using rule 28 (if_statement -> IF LPAR E LARGER E RPAR statement ELSE statement .)
    IF              reduce using rule 28 (if_statement -> IF LPAR E LARGER E RPAR statement ELSE statement .)
    WHILE           reduce using rule 28 (if_statement -> IF LPAR E LARGER E RPAR statement ELSE statement .)
    TEXT_COMMENT    reduce using rule 28 (if_statement -> IF LPAR E LARGER E RPAR statement ELSE statement .)
    RBRACE          reduce using rule 28 (if_statement -> IF LPAR E LARGER E RPAR statement ELSE statement .)


state 140

    (30) if_statement -> IF LPAR E UNEQUAL E RPAR statement ELSE statement .

    ID              reduce using rule 30 (if_statement -> IF LPAR E UNEQUAL E RPAR statement ELSE statement .)
    PRINT           reduce using rule 30 (if_statement -> IF LPAR E UNEQUAL E RPAR statement ELSE statement .)
    IF              reduce using rule 30 (if_statement -> IF LPAR E UNEQUAL E RPAR statement ELSE statement .)
    WHILE           reduce using rule 30 (if_statement -> IF LPAR E UNEQUAL E RPAR statement ELSE statement .)
    TEXT_COMMENT    reduce using rule 30 (if_statement -> IF LPAR E UNEQUAL E RPAR statement ELSE statement .)
    RBRACE          reduce using rule 30 (if_statement -> IF LPAR E UNEQUAL E RPAR statement ELSE statement .)


state 141

    (32) if_statement -> IF LPAR E EQUAL E RPAR statement ELSE statement .

    ID              reduce using rule 32 (if_statement -> IF LPAR E EQUAL E RPAR statement ELSE statement .)
    PRINT           reduce using rule 32 (if_statement -> IF LPAR E EQUAL E RPAR statement ELSE statement .)
    IF              reduce using rule 32 (if_statement -> IF LPAR E EQUAL E RPAR statement ELSE statement .)
    WHILE           reduce using rule 32 (if_statement -> IF LPAR E EQUAL E RPAR statement ELSE statement .)
    TEXT_COMMENT    reduce using rule 32 (if_statement -> IF LPAR E EQUAL E RPAR statement ELSE statement .)
    RBRACE          reduce using rule 32 (if_statement -> IF LPAR E EQUAL E RPAR statement ELSE statement .)


state 142

    (34) while_statement -> WHILE LPAR E LESS E RPAR statement ELSE statement .

    ID              reduce using rule 34 (while_statement -> WHILE LPAR E LESS E RPAR statement ELSE statement .)
    PRINT           reduce using rule 34 (while_statement -> WHILE LPAR E LESS E RPAR statement ELSE statement .)
    IF              reduce using rule 34 (while_statement -> WHILE LPAR E LESS E RPAR statement ELSE statement .)
    WHILE           reduce using rule 34 (while_statement -> WHILE LPAR E LESS E RPAR statement ELSE statement .)
    TEXT_COMMENT    reduce using rule 34 (while_statement -> WHILE LPAR E LESS E RPAR statement ELSE statement .)
    RBRACE          reduce using rule 34 (while_statement -> WHILE LPAR E LESS E RPAR statement ELSE statement .)


state 143

    (36) while_statement -> WHILE LPAR E LARGER E RPAR statement ELSE statement .

    ID              reduce using rule 36 (while_statement -> WHILE LPAR E LARGER E RPAR statement ELSE statement .)
    PRINT           reduce using rule 36 (while_statement -> WHILE LPAR E LARGER E RPAR statement ELSE statement .)
    IF              reduce using rule 36 (while_statement -> WHILE LPAR E LARGER E RPAR statement ELSE statement .)
    WHILE           reduce using rule 36 (while_statement -> WHILE LPAR E LARGER E RPAR statement ELSE statement .)
    TEXT_COMMENT    reduce using rule 36 (while_statement -> WHILE LPAR E LARGER E RPAR statement ELSE statement .)
    RBRACE          reduce using rule 36 (while_statement -> WHILE LPAR E LARGER E RPAR statement ELSE statement .)


state 144

    (38) while_statement -> WHILE LPAR E UNEQUAL E RPAR statement ELSE statement .

    ID              reduce using rule 38 (while_statement -> WHILE LPAR E UNEQUAL E RPAR statement ELSE statement .)
    PRINT           reduce using rule 38 (while_statement -> WHILE LPAR E UNEQUAL E RPAR statement ELSE statement .)
    IF              reduce using rule 38 (while_statement -> WHILE LPAR E UNEQUAL E RPAR statement ELSE statement .)
    WHILE           reduce using rule 38 (while_statement -> WHILE LPAR E UNEQUAL E RPAR statement ELSE statement .)
    TEXT_COMMENT    reduce using rule 38 (while_statement -> WHILE LPAR E UNEQUAL E RPAR statement ELSE statement .)
    RBRACE          reduce using rule 38 (while_statement -> WHILE LPAR E UNEQUAL E RPAR statement ELSE statement .)


state 145

    (40) while_statement -> WHILE LPAR E EQUAL E RPAR statement ELSE statement .

    ID              reduce using rule 40 (while_statement -> WHILE LPAR E EQUAL E RPAR statement ELSE statement .)
    PRINT           reduce using rule 40 (while_statement -> WHILE LPAR E EQUAL E RPAR statement ELSE statement .)
    IF              reduce using rule 40 (while_statement -> WHILE LPAR E EQUAL E RPAR statement ELSE statement .)
    WHILE           reduce using rule 40 (while_statement -> WHILE LPAR E EQUAL E RPAR statement ELSE statement .)
    TEXT_COMMENT    reduce using rule 40 (while_statement -> WHILE LPAR E EQUAL E RPAR statement ELSE statement .)
    RBRACE          reduce using rule 40 (while_statement -> WHILE LPAR E EQUAL E RPAR statement ELSE statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAR in state 38 resolved as shift
WARNING: shift/reduce conflict for RPAR in state 39 resolved as shift
WARNING: shift/reduce conflict for RPAR in state 40 resolved as shift
WARNING: shift/reduce conflict for RPAR in state 41 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 77 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 77 resolved as shift
WARNING: shift/reduce conflict for POW in state 77 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 78 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 78 resolved as shift
WARNING: shift/reduce conflict for POW in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 79 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 79 resolved as shift
WARNING: shift/reduce conflict for POW in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 80 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 80 resolved as shift
WARNING: shift/reduce conflict for POW in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 81 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 81 resolved as shift
WARNING: shift/reduce conflict for POW in state 81 resolved as shift
